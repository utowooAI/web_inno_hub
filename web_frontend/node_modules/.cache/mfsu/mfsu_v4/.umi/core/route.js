import routeProps from "./routeProps";
if (true) {
  Object.entries(routeProps).forEach(([key, value]) => {
    const internalProps = ["path", "id", "parentId", "isLayout", "isWrapper", "layout", "clientLoader"];
    Object.keys(value).forEach((prop) => {
      if (internalProps.includes(prop)) {
        throw new Error(
          `[UmiJS] route '${key}' should not have '${prop}' prop, please remove this property in 'routeProps'.`
        );
      }
    });
  });
}
import React from "react";
export async function getRoutes() {
  const routes = { "Register/index": { "path": "Register", "id": "Register/index", "parentId": "@@/global-layout" }, "Login/index": { "path": "Login", "id": "Login/index", "parentId": "@@/global-layout" }, "@@/global-layout": { "id": "@@/global-layout", "path": "/", "isLayout": true } };
  return {
    routes,
    routeComponents: {
      "Register/index": React.lazy(() => import(
        /* webpackChunkName: "src__pages__Register__index" */
        "../../../src/pages/Register/index.jsx"
      )),
      "Login/index": React.lazy(() => import(
        /* webpackChunkName: "src__pages__Login__index" */
        "../../../src/pages/Login/index.jsx"
      )),
      "@@/global-layout": React.lazy(() => import(
        /* webpackChunkName: "layouts__index" */
        "D:/Inno_Workspace/web_application/web_frontend/src/layouts/index.jsx"
      ))
    }
  };
}
