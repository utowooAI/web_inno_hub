import * as Plugin_0 from "D:/Inno_Workspace/web_application/web_frontend/src/app.js";
import * as Plugin_1 from "@@/core/helmet.ts";
import { PluginManager } from "umi";
function __defaultExport(obj) {
  if (obj.default) {
    return typeof obj.default === "function" ? obj.default() : obj.default;
  }
  return obj;
}
export function getPlugins() {
  return [
    {
      apply: __defaultExport(Plugin_0),
      path: false ? void 0 : "D:/Inno_Workspace/web_application/web_frontend/src/app.js"
    },
    {
      apply: Plugin_1,
      path: false ? void 0 : "@@/core/helmet.ts"
    }
  ];
}
export function getValidKeys() {
  return ["patchRoutes", "patchClientRoutes", "modifyContextOpts", "modifyClientRenderOpts", "rootContainer", "innerProvider", "i18nProvider", "accessProvider", "dataflowProvider", "outerProvider", "render", "onRouteChange"];
}
let pluginManager = null;
export function createPluginManager() {
  pluginManager = PluginManager.create({
    plugins: getPlugins(),
    validKeys: getValidKeys()
  });
  return pluginManager;
}
export function getPluginManager() {
  return pluginManager;
}
